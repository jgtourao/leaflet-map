<!DOCTYPE html> 
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa com Leaflet e OpenRouteService</title>
    
    <!-- Link para o CSS do Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <style>
        #map {
            height: 90vh;
            width: 100%;
        }
        #transport-select {
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="transport-select">
        <label for="transportMode">Escolha o modo de transporte:</label>
        <select id="transportMode">
            <option value="foot-walking">A pé</option>
            <option value="cycling-regular">Bicicleta</option>
            <option value="driving-car">Carro</option>
            <option value="driving-motorcycle">Moto</option>
        </select>
    </div>
    
    <div id="map"></div>

    <!-- Biblioteca Leaflet -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        const apiKey = "5b3ce3597851110001cf624859768f3976cb435a8aeb71c5362150bb";
        let map, rotasLayer, userMarker;
        let userCoords = null;

        // Pontos de referência para traçar as rotas
        const pontosReferencia = [
            { coords: [-1.437963, -48.486976], popup: 'Feira orgânica' },
            { coords: [-1.459218, -48.490491], popup: 'Feirinha da Batista Campos' },
            { coords: [-1.449076, -48.500122], popup: 'Estação das Docas' }
        ];

        function inicializarMapa() {
            // Inicializa o mapa
            map = L.map('map', {
                center: [-1.45502, -48.5024],
                zoom: 13,
                tap: false,
            });

            // Camada de tiles (mapa base)
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
                maxZoom: 19,
            }).addTo(map);

            // Camada para as rotas
            rotasLayer = L.layerGroup().addTo(map);

            // Coloca marcadores para cada ponto de referência
            pontosReferencia.forEach((ponto) => {
                const marker = L.marker(ponto.coords).addTo(map).bindPopup(ponto.popup);
                
                // Ao clicar em um ponto, traça rotas para todos os pontos de referência
                marker.on('click', () => {
                    if (userCoords) {
                        const transportMode = document.getElementById('transportMode').value;
                        pontosReferencia.forEach(p => traçarRota(userCoords, p.coords, transportMode));
                    } else {
                        alert("Aguarde a localização do usuário ser carregada.");
                    }
                });
            });

            // Obter a localização do usuário
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(posicaoUsuario, erroLocalizacao, { enableHighAccuracy: true });
            } else {
                alert("Geolocalização não é suportada pelo seu navegador.");
            }
        }

        // Função para marcar a posição do usuário e armazenar as coordenadas
        function posicaoUsuario(position) {
            const { latitude, longitude } = position.coords;

            // Marca a posição do usuário no mapa
            userCoords = [latitude, longitude];
            userMarker = L.marker(userCoords, { color: 'red' })
                .addTo(map)
                .bindPopup("Você está aqui")
                .openPopup();
            map.setView(userCoords, 13);
        }

        function erroLocalizacao() {
            alert("Não foi possível obter sua localização.");
        }

        // Função para traçar a rota
        async function traçarRota(coordsStart, coordsEnd, transportMode) {
            try {
                const response = await fetch(`https://api.openrouteservice.org/v2/directions/${transportMode}?api_key=${apiKey}&start=${coordsStart[1]},${coordsStart[0]}&end=${coordsEnd[1]},${coordsEnd[0]}`);
                const data = await response.json();
                
                // Processa as coordenadas da rota
                const rota = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);

                // Adiciona a rota no mapa
                L.polyline(rota, { color: 'blue', weight: 5 }).addTo(rotasLayer);
                
            } catch (error) {
                console.error('Erro ao traçar rota:', error);
            }
        }

        // Inicializa o mapa quando a página é carregada
        window.onload = inicializarMapa;
    </script>
</body>
</html>
