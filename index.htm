<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa com Leaflet e OpenRouteService</title>
    
    <!-- Link para o CSS do Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <style>
        #map {
            height: 90vh;
            width: 100%;
        }
        #transport-select {
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="transport-select">
        <label for="transportMode">Escolha o modo de transporte:</label>
        <select id="transportMode">
            <option value="foot-walking">A pé</option>
            <option value="cycling-regular">Bicicleta</option>
            <option value="driving-car">Carro</option>
            <option value="driving-motorcycle">Moto</option>
        </select>
    </div>
    
    <div id="map"></div>

    <!-- Biblioteca Leaflet -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        const apiKey = "5b3ce3597851110001cf624859768f3976cb435a8aeb71c5362150bb";
        let map, rotasLayer;

        const pontosReferencia = [
            { coords: [-1.437963, -48.486976], popup: 'Belém - PA: Feira organica' },
            { coords: [-1.459218, -48.490491], popup: 'Belém - PA, 66015-200: Feirinha da Batista Campos' },
            { coords: [-1.4621, -48.5122], popup: 'Ponto 3: Estação das Docas' }
        ];

        function inicializarMapa() {
            var isMobile = window.innerWidth <= 768;
            var zoomLevel = isMobile ? 12 : 13;

            map = L.map('map', {
                center: [-1.45502, -48.5024],
                zoom: zoomLevel,
                tap: false,
            });

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
                maxZoom: 19,
            }).addTo(map);

            rotasLayer = L.layerGroup().addTo(map);

            pontosReferencia.forEach((ponto, index) => {
                const marker = L.marker(ponto.coords).addTo(map)
                    .bindPopup(ponto.popup)
                    .on('click', () => {
                        const transportMode = document.getElementById('transportMode').value;
                        calcularRota(pontosReferencia[0].coords, ponto.coords, transportMode);
                    });
            });
        }

        async function calcularRota(coordsStart, coordsEnd, transportMode) {
            try {
                rotasLayer.clearLayers(); // Limpa rotas anteriores
                const response = await fetch(`https://api.openrouteservice.org/v2/directions/${transportMode}?api_key=${apiKey}&start=${coordsStart[1]},${coordsStart[0]}&end=${coordsEnd[1]},${coordsEnd[0]}`);
                const data = await response.json();
                
                const rota = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);
                const duracao = Math.round(data.routes[0].summary.duration / 60);

                L.polyline(rota, { color: 'blue', weight: 5 }).addTo(rotasLayer);

                L.marker(coordsEnd).addTo(rotasLayer)
                    .bindPopup(`Tempo estimado até aqui: ${duracao} minutos`).openPopup();
                
            } catch (error) {
                console.error('Erro ao calcular rota:', error);
            }
        }

        window.onload = inicializarMapa;
    </script>
</body>
</html>
